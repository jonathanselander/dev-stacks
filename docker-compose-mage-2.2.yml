version: "3.7"
services:
  varnish:
    build:
      context: ./.docker/img-varnish
      dockerfile: varnish.dockerfile
    volumes:
      - ./.docker/etc-mage/varnish.vcl:/etc/varnish/default.vcl:ro
      - varnish_data:/var/lib/varnish
    network_mode: "host"
    hostname: mage-varnish
  nginx:
    image: nginx:stable
    volumes:
      - ./.docker/etc-mage/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${MAGENTO_ROOT_DIR:-.}:/srv/magento:ro
      - ${MAGENTO_MEDIA_DIR:-./pub/media}:/srv/magento/pub/media:ro
    network_mode: "host"
    hostname: mage-nginx
  php:
    build:
      context: ./.docker/img-php-mage
      dockerfile: php-7.1.dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
    volumes:
      - ${COMPOSER_HOME:-~/.config/composer}:/home/magento/.composer
      - ${COMPOSER_CACHE_DIR:-~/.cache/composer}:/home/magento/.composer/cache
      - ${MAGENTO_ROOT_DIR:-.}:/srv/magento
      - ${MAGENTO_MEDIA_DIR:-./pub/media}:/srv/magento/pub/media
    environment:
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG:-serverName=magento}
      MAGE_MODE: developer
    network_mode: "host"
    hostname: mage-php
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: magento
      MYSQL_DATABASE: magento
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento
    volumes:
      - mysql_data:/var/lib/mysql
    network_mode: "host"
    hostname: mage-mysql
  redis:
    image: redis:3.2
    volumes:
      - redis_data:/data
    network_mode: "host"
    hostname: mage-redis
  mailhog:
    image: mailhog/mailhog
    network_mode: "host"
    hostname: mage-mailhog
volumes:
  varnish_data:
  mysql_data:
  redis_data:
