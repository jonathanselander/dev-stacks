version: "3.7"
services:
  traefik:
    image: traefik:2.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.docker/etc-magento/traefik.yml:/etc/traefik/traefik.yml:ro
    ports:
      - 80:80
      - 3306:3306
      - 6379:6379
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.rule=Host(`localhost`)"
    hostname: mage-traefik
  varnish:
    build:
      context: ./.docker/img-varnish
      dockerfile: varnish.dockerfile
    volumes:
      - ./.docker/etc-magento/varnish.vcl:/etc/varnish/default.vcl:ro
      - varnish_data:/var/lib/varnish
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.magento.entrypoints=http"
      - "traefik.http.routers.magento.rule=Host(`magento.localhost`)"
    hostname: mage-varnish
  nginx:
    image: nginx:stable
    volumes:
      - ./.docker/etc-magento/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${MAGENTO_ROOT_DIR:-.}:/srv/magento:ro
      - ${MAGENTO_MEDIA_DIR:-./pub/media}:/srv/magento/pub/media:ro
    hostname: mage-nginx
  php:
    build:
      context: ./.docker/img-magento
      dockerfile: magento.dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION:-7.3}
        USER_ID: ${USER_ID:-1000}
    volumes:
      - ${COMPOSER_HOME:-~/.config/composer}:/home/magento/.composer
      - ${COMPOSER_CACHE_DIR:-~/.cache/composer}:/home/magento/.composer/cache
      - ${MAGENTO_ROOT_DIR:-.}:/srv/magento
      - ${MAGENTO_MEDIA_DIR:-./pub/media}:/srv/magento/pub/media
    environment:
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG:-serverName=magento}
      MAGE_MODE: developer
    hostname: mage-php
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: magento
      MYSQL_DATABASE: magento
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento
    volumes:
      - ./.docker/etc-magento/mysqld.cnf:/etc/mysql/conf.d/magento.cnf:ro
      - mysql_data:/var/lib/mysql
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mysql.entrypoints=mysql"
      - "traefik.tcp.routers.mysql.rule=HostSNI(`*`)"
    hostname: mage-mysql
  redis:
    image: redis:5.0
    volumes:
      - redis_data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.redis.entrypoints=redis"
      - "traefik.tcp.routers.redis.rule=HostSNI(`*`)"
    hostname: mage-redis
  elasticsearch:
    build:
      context: ./.docker/img-elasticsearch
      dockerfile: elasticsearch-6.8.dockerfile
    environment:
      discovery.type: single-node
      cluster.name: magento
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    hostname: mage-elasticsearch
  rabbitmq:
    image: rabbitmq:3.7-management
    environment:
      RABBITMQ_DEFAULT_VHOST: magento
      RABBITMQ_DEFAULT_USER: magento
      RABBITMQ_DEFAULT_PASS: magento
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rabbitmq.entrypoints=http"
      - "traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.localhost`)"
      - "traefik.http.services.rabbitmq.loadbalancer.server.port=15672"
    hostname: mage-rabbitmq
  mailhog:
    image: mailhog/mailhog
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailhog.rule=Host(`mailhog.localhost`)"
      - "traefik.http.routers.mailhog.entrypoints=http"
      - "traefik.http.services.mailhog.loadbalancer.server.port=8025"
    hostname: mage-mailhog
volumes:
  varnish_data:
  mysql_data:
  redis_data:
  elasticsearch_data:
  rabbitmq_data:
